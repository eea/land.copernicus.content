<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
      lang="en-US"
      metal:use-macro="context/main_template/macros/master"
      i18n:domain="plone">

<body>
  <metal:description fill-slot="content-description" />

  <metal:content-core fill-slot="content-core">
    <metal:main_macro define-macro="content-core">

<style type="text/css">
  div[data-diazo=insitu-news-list],
  div[data-diazo=insitu-events-list] {
    display: none;
  }
  .insitu-btn-observations:hover,
  .insitu-btn-spatial-data:hover {
    text-decoration: none !important;
  }

  .btn.pressed {
    border: 2px solid #000000;
    border-bottom: 2px solid #000000 !important;
  }

  .insitu-btn-tags-container:not(.search-filters) {
    display: none;
  }

  body.template-search-by-tags .btn.btn-sm.insitu-btn-observations {
    color: #000000 !important;
  }

  body.template-search-by-tags .btn.btn-sm {
    color: #FFFFFF !important;
    margin-right: 5px;
    margin-bottom: 2px;
  }

  body.template-search-by-tags .btn.btn-sm:hover {
    text-decoration: none !important;
  }

  body.template-search-by-tags ul.pagination {
    display: inline-flex !important;
    list-style-type: none !important;
  }

  body.template-search-by-tags ul.pagination li a {
    border: none !important;
  }

  body.template-search-by-tags ul.pagination li.active a {
    color: #FFFFFF !important;
  }

  body.template-search-by-tags ul.pagination li a:hover {
    text-decoration: none !important;
  }

  body.template-search-by-tags .pagination-controls {
    position: relative;
    top: -20px;
    left: -28px;
  }

  .btn.btn-sm.insitu-btn-observations,
  .btn.btn-sm.insitu-btn-spatial-data {
    padding: 6px 10px !important;
    font-size: 12px !important;
  }

  div.search-item {
    padding-bottom: 20px;
    border-bottom: 1px solid #DDDDDD;
    margin-bottom: 10px;
  }
</style>

<div id="search-app" class="container"
     ng-app="searchApp" ng-controller="searchController as app">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">

      <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.7/angular.min.js"></script>
      <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.7/angular-route.js"></script>
      <script src="./dirPagination.js"></script>

      <h1 class="page-title">{{app.set_page_title()}}</h1>

      <!-- SEARCH RESULTS -->
      <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
          <div class="search-item"
               dir-paginate="item in app.get_results() | itemsPerPage: app.items_per_page">
            <div class="item">
              <a href="{{item.url}}" target="_blank">
                <h3>
                  {{item.title}}
                </h3>
              </a>
              <p>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                Nullam mollis ut lacus id placerat.
                Nullam mollis, nisl eget luctus tincidunt, sem lectus
                efficitur urna, quis aliquet mi tellus id nibh.
                Sed pharetra iaculis lacinia. Phasellus sagittis, sem vel
                gravida mattis, mauris lacus posuere odio, sit amet aliquam
                nunc urna eu quam. Vestibulum sollicitudin ligula eget dui
                auctor, a malesuada urna molestie.
                Vivamus in massa mattis, molestie risus ut, hendrerit
                <a href="{{item.url}}" target="_blank">
                  [...]
                </a>
              </p>
              <a href
                 ng-repeat="tag in app.get_tags_info(item.tags)"
                 ng-click="app.toggle_tag(tag.id)"
                 class="{{tag.tag_class}} {{app.is_pressed(tag.id)}}">
                {{tag.title}}
              </a>
            </div>
          </div>
          <div class="pull-left pagination-controls">
            <dir-pagination-controls></dir-pagination-controls>
          </div>
          <div class="pull-right">
            <p>
              Items per page:
              <button class="btn btn-default {{app.is_active(5)}}"
                      ng-click="app.set_items_per_page(5)">5</button>
              <button class="btn btn-default {{app.is_active(10)}}"
                      ng-click="app.set_items_per_page(10)">10</button>
              <button class="btn btn-default {{app.is_active(50)}}"
                      ng-click="app.set_items_per_page(50)">50</button>
              <button class="btn btn-default {{app.is_active(100)}}"
                      ng-click="app.set_items_per_page(100)">100</button>
            </p>
          </div>
        </div>
      </div>

      <!-- SEARCH CRITERIA -->
      <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6"
             ng-repeat="tag in app.get_tags(1)">
          <a href class="{{tag.btn_class}} {{app.is_pressed(tag.id)}}"
             ng-click="app.toggle_tag(tag.id)">
            <img ng-src="./{{tag.id}}-icon.png" alt="{{tag.title}}">
            <br>
            <span class="text text-uppercase">{{tag.title}}</span>
          </a>
        </div>
      </div>

      <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
          <!-- Insitu Tags -->
          <div class="insitu-btn-tags-container search-filters text-center">
            <div id="insitu-tags-1">
              <a href
                 ng-repeat="tag in app.get_tags(2)"
                 ng-click="app.toggle_tag(tag.id)"
                 class="{{tag.btn_class}} {{app.is_pressed(tag.id)}}">
                {{tag.title}}
              </a>
            </div>
            <div id="insitu-tags-2">
              <a href
                 ng-repeat="tag in app.get_tags(3)"
                 ng-click="app.toggle_tag(tag.id)"
                 class="{{tag.btn_class}} {{app.is_pressed(tag.id)}}">
                {{tag.title}}
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<script type="text/javascript">
angular.module('searchApp',
               ['ngRoute','angularUtils.directives.dirPagination'])
  .controller('searchController', function($scope, $rootScope, $location) {
    var app = this;

    app.items_per_page = 5;
    app.tags = [
      {
        category: 1,
        title: 'Observations',
        id: 'observations',
        tag_class: 'btn btn-default btn-sm insitu-btn-observations',
        btn_class: 'btn btn-default btn-block insitu-btn-observations'
      },
      {
        category: 1,
        title: 'Spatial Data',
        id: 'spatial-data',
        tag_class: 'btn btn-default btn-sm insitu-btn-spatial-data',
        btn_class: 'btn btn-default btn-block insitu-btn-spatial-data'
      },
      {
        category: 2,
        title: 'Policy',
        id: 'policy',
        tag_class: 'btn btn-default btn-sm insitu-btn-policy',
        btn_class: 'btn btn-default insitu-btn-policy'
      },
      {
        category: 2,
        title: 'Agreements',
        id: 'agreements',
        tag_class: 'btn btn-default btn-sm insitu-btn-agreements',
        btn_class: 'btn btn-default insitu-btn-agreements'
      },
      {
        category: 2,
        title: 'Infrastructure',
        id: 'infrastructure',
        tag_class: 'btn btn-default btn-sm insitu-btn-infrastructure',
        btn_class: 'btn btn-default insitu-btn-infrastructure'
      },
      {
        category: 2,
        title: 'Open Data',
        id: 'open-data',
        tag_class: 'btn btn-default btn-sm insitu-btn-open-data',
        btn_class: 'btn btn-default insitu-btn-open-data'
      },
      {
        category: 3,
        title: 'Land',
        id: 'land',
        tag_class: 'btn btn-default btn-sm insitu-btn-land',
        btn_class: 'btn btn-default insitu-btn-land'
      },
      {
        category: 3,
        title: 'Marine',
        id: 'marine',
        tag_class: 'btn btn-default btn-sm insitu-btn-marine',
        btn_class: 'btn btn-default insitu-btn-marine'
      },
      {
        category: 3,
        title: 'Atmosphere',
        id: 'atmosphere',
        tag_class: 'btn btn-default btn-sm insitu-btn-atmosphere',
        btn_class: 'btn btn-default insitu-btn-atmosphere'
      },
      {
        category: 3,
        title: 'Emergency',
        id: 'emergency',
        tag_class: 'btn btn-default btn-sm insitu-btn-emergency',
        btn_class: 'btn btn-default insitu-btn-emergency'
      },
      {
        category: 3,
        title: 'Security',
        id: 'security',
        tag_class: 'btn btn-default btn-sm insitu-btn-security',
        btn_class: 'btn btn-default insitu-btn-security'
      },
      {
        category: 3,
        title: 'Climate Change',
        id: 'climate-change',
        tag_class: 'btn btn-default btn-sm insitu-btn-climate-change',
        btn_class: 'btn btn-default insitu-btn-climate-change'
      }
    ]
    app.tagsMappedById = {};
    app.tags.forEach(function (c) { app.tagsMappedById[c.id] = c; });

    app.items = [
      {
        id: '01',
        title: 'Title here 1',
        url: 'http://www.google.com',
        tags: ['security', 'emergency', 'observations', 'atmosphere']
      },
      {
        id: '02',
        title: 'Title here 2',
        url: 'http://www.google.com',
        tags: ['spatial-data', 'security', 'atmosphere']
      },
      {
        id: '03',
        title: 'Title here 3',
        url: 'http://www.google.com',
        tags: ['climate-change', 'atmosphere']
      },
      {
        id: '04',
        title: 'Title here 4',
        url: 'http://www.google.com',
        tags: ['security', 'emergency', 'observations', 'atmosphere']
      },
      {
        id: '05',
        title: 'Title here 5',
        url: 'http://www.google.com',
        tags: ['spatial-data', 'security', 'atmosphere']
      },
      {
        id: '06',
        title: 'Title here 6',
        url: 'http://www.google.com',
        tags: ['climate-change', 'marine']
      },
      {
        id: '07',
        title: 'Title here 7',
        url: 'http://www.google.com',
        tags: ['security', 'emergency', 'observations', 'marine']
      },
      {
        id: '08',
        title: 'Title here 8',
        url: 'http://www.google.com',
        tags: ['spatial-data', 'security', 'marine']
      },
      {
        id: '09',
        title: 'Title here 9',
        url: 'http://www.google.com',
        tags: ['climate-change', 'marine']
      },
      {
        id: '10',
        title: 'Title here 10',
        url: 'http://www.google.com',
        tags: ['security', 'emergency', 'observations', 'marine']
      },
      {
        id: '11',
        title: 'Title here 11',
        url: 'http://www.google.com',
        tags: ['spatial-data', 'security', 'land']
      },
      {
        id: '12',
        title: 'Title here 12',
        url: 'http://www.google.com',
        tags: ['climate-change', 'land']
      },
      {
        id: '13',
        title: 'Title here 13',
        url: 'http://www.google.com',
        tags: ['security', 'emergency', 'observations', 'land']
      },
      {
        id: '14',
        title: 'Title here 14',
        url: 'http://www.google.com',
        tags: ['spatial-data', 'security', 'open-data']
      },
      {
        id: '15',
        title: 'Title here 15',
        url: 'http://www.google.com',
        tags: ['climate-change', 'open-data']
      },
      {
        id: '16',
        title: 'Title here 16',
        url: 'http://www.google.com',
        tags: ['security', 'emergency', 'observations', 'infrastructure']
      },
      {
        id: '17',
        title: 'Title here 17',
        url: 'http://www.google.com',
        tags: ['spatial-data', 'security', 'agreements', 'infrastructure']
      },
      {
        id: '18',
        title: 'Title here 18',
        url: 'http://www.google.com',
        tags: ['climate-change', 'policy']
      }
    ];

    app.tag_exists = function(tag_id) {
      // Return true if the tag exists in the list of tags
      var result = false;
      angular.forEach(app.tags, function(a_tag) {
        if(a_tag.id == tag_id) {
          result = true;
        }
      });
      return result;
    }

    app.get_selected_tags_as_url_params = function() {
      // Check url for existing selected tags
      var selected_tags = $location.search().selected_tags;
      if(selected_tags == undefined) {
        return [];
      }
      var possible_tags = selected_tags.split("@");

      var result = [];
      angular.forEach(possible_tags, function(tag_id) {
        if(app.tag_exists(tag_id)) {
          result.push(tag_id);
        }
      });

      return result;
    }

    app.selected_tags = app.get_selected_tags_as_url_params();

    app.set_selected_tags_as_url_params = function() {
      var tags_params = app.selected_tags.join("@");
      $location.search('selected_tags', tags_params);
    }

    app.set_selected_tags_as_url_params();

    app.superset_includes_subset = function arrayContainsArray (superset, subset) {
      // Return true if all values in subset exist in superset
      return subset.every(function (value) {
        return (superset.indexOf(value) >= 0);
      });
    }

    app.item_has_tags = function(item, tags) {
      // Return true if all tags are present in item's tags
      return app.superset_includes_subset(item.tags, tags);
    }

    app.get_results = function() {
      // Filter items by selected tags
      result = [];
      angular.forEach(app.items, function(an_item) {
        if(app.item_has_tags(an_item, app.selected_tags)) {
          result.push(an_item);
        }
      });
      return result;
    }

    app.get_tags = function(category) {
      // Return tags by given category
      result = [];
      angular.forEach(app.tags, function(a_tag) {
        if(a_tag.category == category) {
          result.push(a_tag);
        }
      });
      return result;
    }

    app.get_tag_info = function(tag_id) {
      // Return tag info by given id
      return app.tagsMappedById[tag_id];
    }

    app.get_tags_info = function(tags) {
      // Input: array of strings (tags ids)
      // Output: array of tags (info)
      result = [];
      angular.forEach(tags, function(tag_id) {
        result.push(app.get_tag_info(tag_id));
      });
      return result;
    }

    app.tag_is_selected = function(tag_id) {
      // Return true if the tag is selected as criteria for search
      var result = false;
      angular.forEach(app.selected_tags, function(a_tag_id) {
        if(a_tag_id == tag_id) {
          result = true;
        }
      });
      return result;
    }

    app.is_pressed = function(tag_id) {
      // Return 'pressed' or '' to be used as class name for btn
      if(app.tag_is_selected(tag_id)) {
        return 'pressed';
      }
      return '';
    }

    app.is_active = function(items_number) {
      // Return 'pressed' or '' to be used as class name for items/page btn
      if(items_number == app.items_per_page) {
        return 'pressed';
      }
      return '';
    }

    app.set_items_per_page = function(items_number) {
      // Set items per page for search results pagination
      app.items_per_page = items_number;
    }

    app.set_page_title = function() {
      // Set the page title
      var selected_tags = app.selected_tags;

      if(selected_tags.length == 0) {
        return "Search";
      }

      if(selected_tags.length == 1) {
        return app.get_tag_info(selected_tags[0]).title;
      }

      var tags_titles = [];
      angular.forEach(selected_tags, function(a_tag_id) {
        tags_titles.push(app.get_tag_info(a_tag_id).title);
      });

      return "Content tagged " + tags_titles.join(" and ");
    }

    app.add_tag = function(tag_id) {
      // Add a given tag in the selected tags
      app.selected_tags.push(tag_id);
      app.set_selected_tags_as_url_params();
    }

    app.remove_tag = function(tag_id) {
      // Remove a given tag from the selected tags
      app.selected_tags.splice(app.selected_tags.indexOf(tag_id), 1);
      app.set_selected_tags_as_url_params();
    }

    app.toggle_tag = function(tag_id) {
      // Select or deselect a given tag from search criteria
      if(app.tag_is_selected(tag_id)) {
        app.remove_tag(tag_id);
      } else {
        app.add_tag(tag_id);
      }
    }

  });
</script>



    </metal:main_macro>
  </metal:content-core>
</body>
</html>
