<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
      lang="en-US"
      metal:use-macro="context/main_template/macros/master"
      i18n:domain="plone">

<body>
<metal:title fill-slot="content-title">
  <h1 metal:use-macro="context/kss_generic_macros/macros/generic_title_view"></h1>
</metal:title>

<metal:styleslot fill-slot="style_slot">
  <link rel="stylesheet" type="text/css" href="${portal_url}/++resource++land.copernicus.content.static/lib/jquery.dataTables.min.css" />
  <link rel="stylesheet" type="text/css" href="${portal_url}/++resource++land.copernicus.content.static/fileslibraryitem/fileslibraryitem.css" />
</metal:styleslot>

<metal:javascriptslot fill-slot="javascript_head_slot">
  <script defer type="text/javascript" language="javascript" src="${portal_url}/++resource++land.copernicus.content.static/lib/jquery.dataTables.min.js" />
</metal:javascriptslot>

<metal:content-core fill-slot="content-core">
  <metal:main_macro define-macro="content-core">
    <div id="parent-fieldname-text" tal:content="structure context/text/output"></div>

    <div style="display:none;" id="initial-json-data" tal:content="context/json_data"></div>
    <div style="display:none;" id="initial-search-filters" tal:content="python:view.get_search_filters()"></div>
    <table class="table-render"></table>

    <p class="info-more-search">
      Search also in the
      <a href="https://land.copernicus.eu/global/documents/products" target="_blank">Technical Library</a>
      maintained by the JRC.
    </p>

    <script>
    $(document).ready(function() {
      function render_table() {
        var table_placeholder = document.querySelector('.table-render');
        try {
          var json_data = JSON.parse($("div#initial-json-data").text());
          var search_filters = JSON.parse($("div#initial-search-filters").text());
        } catch(e) {
          console.log("Error: Invalid json.", e);
          return;
        }

        var columns = json_data.columns;
        var rows = json_data.rows;
        var filters = search_filters;

        function make_filters_html(filters) {
          var filters_html = "<div class='filters-container'><p><b>Filter by:</b></p><ul class='filters-list'>";
          for(var i = 0; i < filters.length; i++) {
            filters_html += "<li class='search-filter'>" + filters[i] + "</li>";
          }
          filters_html += "<li class='search-filter'>Show all</li>"
          filters_html += "</ul></div>"

          return filters_html;
        }

        function make_table_html(columns, rows) {
          function render_link(url) {
            if(url == "") {
              return "";
            }

            if(url !== undefined) {
              return "<a href='" + url +"' target='_blank' title=" + url + ">Link<span style='display:none !important'>" + url + "</span></a>";
            } else {
              return "N/A";
            }
          }

          function render_file(file_id) {
            if(file_id == "") {
              return "";
            }

            if(file_id !== undefined) {
              var context_url = document.location.href;
              // var file_url = context_url.substring(0,context_url.lastIndexOf("/")) + "/" + file_id;
              var file_url = context_url + "/" + file_id;
              return "<a href='" + file_url +"' target='_blank' title=" + file_id + ">Link<span style='display:none !important'>" + file_id + "</span></a>";
            } else {
              return "N/A";
            }
          }

          var result = "<table border=1><thead><tr>";

          for(var i = 0; i < columns.length; i++) {
            if(columns[i].text == "URL" || columns[i].text.trim() == "URL") {
              result += "<th>Document access</th>";
            } else {
              if(columns[i].text !== "File" && columns[i].text.trim() !== "File") {
                if(columns[i].text.charAt(0) !== "-" && columns[i].text.trim().charAt(0) !== "-") {
                  result += "<th>" + columns[i].text + "</th>";
                }
              }
            }
          }

          result += "</thead><tbody>"
          for(var i = 0; i < rows.length; i++) {
            result += "<tr>";
            for(var j = 0; j < rows[i].length; j++) {
              if(columns[j].text == "URL" || columns[j].text.trim() == "URL") {
                result += "<td>" +  render_link(rows[i][j].text) + " ";
                for(var k = 0; k < rows[i].length; k++) {
                  if(columns[k].text == "File" || columns[k].text.trim() == "File") {
                    result += render_file(rows[i][k].text);
                  }
                }
                result += "</td>";
              } else {
                if(columns[j].text !== "File" || columns[j].text.trim() !== "File") {
                  if(columns[j].text.charAt(0) !== "-" && columns[j].text.trim().charAt(0) !== "-") {
                    result += "<td>" + rows[i][j].text + "</td>";
                  }
                }
              }
            }
            result += "</tr>";
          }
          result += "</tbody></table>";

          return result;
        }

        if ($.fn.DataTable.isDataTable(".table-render-preview")) {
          $('.table-render-preview').DataTable().clear().destroy();
        }

        var new_el = document.createElement("table");
        new_el.className = "table-render-preview";
        new_el.innerHTML = make_table_html(columns, rows);
        table_placeholder.parentNode.replaceChild(new_el, table_placeholder);

        var document_access_col = 100;
        var visible_columns = 0;
        for(var col = 0; col < columns.length; col++) {
          if(columns[col].text.charAt(0) !== "-" && columns[col].text.trim().charAt(0) !== "-") {
            if(columns[col].text == "URL") {
              break;
            }
            visible_columns++;
          }
        }
        document_access_col = visible_columns; // the index of URL column (without counting invisible columns)

        var the_table = $('.table-render-preview').dataTable({
          "destroy": true,
          "order": [[ 2, "asc" ]],  // this overrides the custom order of items
          "columnDefs": [
            { "orderable": false, "targets": document_access_col },
            { "searchable": false, "targets": document_access_col }
          ]
        });

        $(".dataTables_wrapper").before(make_filters_html(filters));

        $(".search-filter").on("click", function() {
          if($(this).hasClass("is-selected")) {
            $(this).removeClass("is-selected");
            the_table.fnFilter('');
          } else {
            var search_text = $(this).text();
            if(search_text == "Show all") {
              the_table.fnFilter('');
            } else {
              the_table.fnFilter('"' + search_text + '"');
            }
            $(".search-filter").removeClass("is-selected");
            $(this).addClass("is-selected");
          }
        });
      }

      render_table();
    });
    </script>
  </metal:main_macro>
</metal:content-core>
</body>
</html>
