<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
      lang="en-US"
      metal:use-macro="context/main_template/macros/master"
      i18n:domain="plone">

<body>
  <metal:styleslot fill-slot="style_slot">
    <link rel="stylesheet" type="text/css" href="${portal_url}/++resource++land.copernicus.content.static/lib/jquery.dataTables.min.css" />
  </metal:styleslot>

  <metal:javascriptslot fill-slot="javascript_head_slot">
    <script defer type="text/javascript" language="javascript" src="${portal_url}/++resource++land.copernicus.content.static/lib/jquery.dataTables.min.js"></script>
  </metal:javascriptslot>

  <metal:description fill-slot="content-description" />

  <metal:content-core fill-slot="content-core">
    <metal:main_macro define-macro="content-core">
      <div class="users-statistics-container"
           tal:define="reports python:view.reports">

        <h2 i18n:translate="">Download users list</h2>
        <p i18n:translate="">
          Export the list of registered users <i>who gave consent to be contacted by e-mail</i> - in csv format (user_id, first_name, last_name, email).
          <br />
          It will take a few minutes.
        </p>
        <button id="download-users-list" class="btn btn-default"
                tal:attributes="data-ajax-url python:view.ajax_url" i18n:translate="">
          Download users list
        </button>

        <p class="add-space"><br /></p>
        <p id="status"></p>

        <script>
          $("document").ready(function() {
            $("button#download-users-list").on("click", function() {

              $("p#status").text("Loading...");

              var ajax_url = $("button#download-users-list").attr("data-ajax-url");

              $.get(ajax_url, function() {
                document.location.href = ajax_url;
                $("p#status").text("");
              });

            });
          });
        </script>

        <h2 i18n:translate="">Users Statistics</h2>
        <p i18n:translate="">
          Check the existing reports first.
          You can use search to filter reports. Example: "2015" - will give all
          existing reports for 2015. You can sort the data in table by clicking
          the column title.

          By default pending reports are first listed, then all reports sort by last update time.

          If the info is missing you can schedule a report for needed time period.

          After scheduling a report it will appear with 'pending' status.
          Use <em>Generate reports</em> button to solve pending reports.
        </p>

        <form method="post">
          <div class="form-group">
            <label for="start-date" i18n:translate="">Start date</label>
            <input type="date" name="start-date" min="2010-01-01" required />
            <p class="help-block" i18n:translate="">Start date for your report</p>
          </div>

          <div class="form-group">
            <label for="end-date" i18n:translate="">End date</label>
            <input type="date" name="end-date" min="2010-01-01" required />
            <p class="help-block" i18n:translate="">End date for your report</p>
          </div>

          <button name="submit" type="submit" class="btn btn-default" i18n:translate="">
            Schedule report
          </button>
        </form>

        <h2 i18n:translate="">Reports</h2>
        <p i18n:translate="">Check requested reports (content and status) here.</p>
        <table class="table table-bordered user-stats-reports">
          <thead>
            <tr>
              <th i18n:translate="">Time period</th>
              <th i18n:translate="">Active</th>
              <th i18n:translate="">New</th>
              <th i18n:translate="">Total</th>
              <th i18n:translate="">Latest update</th>
            </tr>
          </thead>
          <tbody>
            <tal:reports tal:repeat="period_title python:sorted(reports.keys(), reverse=True)"
                         tal:condition="python:reports is not None">
              <tr tal:define="report python: reports.get(period_title)">
                <td tal:content="python:period_title">
                  2010/01/01-2010/01/31
                </td>
                <td tal:content="python:report.get('active', 'N/A')">
                  23
                </td>
                <td tal:content="python:report.get('new', 'N/A')">
                  12
                </td>
                <td tal:content="python:report.get('total', 'N/A')">
                  432
                </td>
                <td tal:content="python:report.get('last_update', 'N/A')">
                  pending or DateTime
                </td>
              </tr>
            </tal:reports>
          </tbody>
        </table>

        <form method="post" class="pull-left">
          <button name="refresh" type="submit" class="btn btn-default" i18n:translate="">
            Refresh table
          </button>
        </form>

        <form method="post" class="pull-right">
          <button name="generate" type="submit" class="btn btn-danger" i18n:translate="">
            Generate reports
          </button>
        </form>

        <!-- Use this at your own risk. :)
             Behavior: all annotations related to users statistics are deleted.
             The monthly reports will be automatically regenerated by our script.
             The custom reports will be lost.

             Usefull after first tests, when the client tell us: it works, but
             let's clear test data.
        -->
        <form method="post" class="pull-right" style="display:none">
          <button name="remove" type="submit" class="btn btn-danger" i18n:translate="">
            Remove reports
          </button>
        </form>
      </div>

      <script>
        $(document).ready(function() {
          $('table.user-stats-reports').DataTable({
            "order": [[ 4, "desc" ]]
          });
        });
      </script>
    </metal:main_macro>
  </metal:content-core>
</body>
</html>
